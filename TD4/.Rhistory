rm(list = ls(all = TRUE))
n = 10
w = 1
for(i in 1:n){
w[i+1] = c(w , 0.5 * w[i] + 1/w[i])
}
w
rm(list = ls(all = TRUE))
n = 10
w = 1
for(i in 1:n){
w[i+1] =  0.5 * w[i] + 1/w[i]
}
w
rm(list = ls(all = TRUE))
n = 10
w = 1
for(i in 1:n){
w[i+1] = 0.5 * w[i] + 1/w[i]
}
w
#on definie le reste
r = was(w  - sqrt(2))
pos = min(which(r<10^(-10)))
pos
plot (1:n, log(r[-1]))
rm(list = ls(all = TRUE))
n = 10
w = 1
for(i in 1:n){
w[i+1] = 0.5 * w[i] + 1/w[i]
}
w
#on definie le reste
r = abs(w  - sqrt(2))
pos = min(which(r<10^(-10)))
pos
plot (1:n, log(r[-1]))
rm(list = ls(all = TRUE))
#on choist jusqu'a quel n on éxecute
n = 10
#initialisation en de la suite.
u = 1
#le vecteur en trouvant tout les thermes
for(i in 1:n){
u = c(u , (u[i]+2)/(u[i]+1))
}
u
#vecteur rn
R=abs(u - sqrt(2))
R
f <- function(x){
r <- (x + 2) / (x + 1)
return(r)
}
u <- function(u,n){
res = c()
res[0] = u
for(i in 0:n){
res[i+1] = f(res[i])
}
return(res)
}
u(2,10)
pos <- min(which(R < (10^-3)))
pos1 <- min(which(R < (10^-10)))
pos
pos1
plot(1:20, log(R[-1][1:20]))
rm(list = ls(all = TRUE))
#on choist jusqu'a quel n on éxecute
n = 10^3
#initialisation en de la suite.
u = 1
#le vecteur en trouvant tout les thermes
for(i in 1:n){
u = c(u , (u[i]+2)/(u[i]+1))
}
u
#vecteur rn
R=abs(u - sqrt(2))
R
f <- function(x){
r <- (x + 2) / (x + 1)
return(r)
}
u <- function(u,n){
res = c()
res[0] = u
for(i in 0:n){
res[i+1] = f(res[i])
}
return(res)
}
u(2,10)
pos <- min(which(R < (10^-3)))
pos1 <- min(which(R < (10^-10)))
pos
pos1
plot(1:20, log(R[-1][1:20]))
rm(list = ls(all = TRUE))
n = 10^3
w = 1
for(i in 1:n){
w[i+1] = 0.5 * w[i] + 1/w[i]
}
w
#on definie le reste
r = abs(w  - sqrt(2))
pos = min(which(r<10^(-10)))
pos
plot (1:n, log(r[-1]))
rm(list = ls(all = TRUE))
n = 10^3
w = 1
for(i in 1:n){
w[i+1] = 0.5 * w[i] + 1/w[i]
}
w
#on definie le reste
r = abs(w  - sqrt(2))
pos = min(which(r<10^(-10)))
pos
plot (1:n, log(r[-1]), "l")
rm(list = ls(all = TRUE))
n = 10^3
w = 1
for(i in 1:n){
w[i+1] = 0.5 * w[i] + 1/w[i]
}
w
#on definie le reste
r = abs(w  - sqrt(2))
pos = min(which(r<10^(-10)))
pos
plot (1:20, log(r[-1]), "l")
rm(list = ls(all = TRUE))
#on choist jusqu'a quel n on éxecute
n = 10^3
#initialisation en de la suite.
u = 1
#le vecteur en trouvant tout les thermes
for(i in 1:n){
u = c(u , (u[i]+2)/(u[i]+1))
}
u
#vecteur rn
R=abs(u - sqrt(2))
R
f <- function(x){
r <- (x + 2) / (x + 1)
return(r)
}
u <- function(u,n){
res = c()
res[0] = u
for(i in 0:n){
res[i+1] = f(res[i])
}
return(res)
}
u(2,10)
pos <- min(which(R < (10^-3)))
pos1 <- min(which(R < (10^-10)))
pos
pos1
plot(1:n, log(R[-1][1:n]))
rm(list = ls(all = TRUE))
n = 10^3
w = 1
for(i in 1:n){
w[i+1] = 0.5 * w[i] + 1/w[i]
}
w
#on definie le reste
r = abs(w  - sqrt(2))
pos = min(which(r<10^(-10)))
pos
plot (1:n, log(r[-1]), "l")
rm(list = ls(all = TRUE))
n = 10
w = 1
for(i in 1:n){
w[i+1] = 0.5 * w[i] + 1/w[i]
}
w
#on definie le reste
r = abs(w  - sqrt(2))
pos = min(which(r<10^(-10)))
pos
plot (1:n, log(r[-1]), "l")
rm(list = ls(all = TRUE))
n = 10^3
w = 1
for(i in 1:n){
w[i+1] = 0.5 * w[i] + 1/w[i]
}
w
#on definie le reste
r = abs(w  - sqrt(2))
pos = min(which(r<10^(-10)))
pos
plot (1:n, log(r[-1]), "l")
rm(list = ls(all = TRUE))
for(i in seq(0,1,0.1){
f[x] = sin(2x)-x
}
f
rm(list = ls(all = TRUE))
f
for(i in seq(0,1,0.1){
f = sin(2x)-x
}
f
rm(list = ls(all = TRUE))
f = sin(0)
for(i in seq(0,1,0.1){
f = c(f,sin(2x)-x)
}
f
rm(list = ls(all = TRUE))
f = sin(0)
for (x in seq(0,1,0.1) {
f = c(f,sin(2x)-x)
}
f
rm(list = ls(all = TRUE))
f = sin(0)
for (x in seq(0, 1, 0.1) {
f = c(f,sin(2x)-x)
}
f
rm(list = ls(all = TRUE))
f = sin(0)
for (x in seq(0, 1, 0.1)) {
f = c(f,sin(2x)-x)
}
f
rm(list = ls(all = TRUE))
f = 0
for (x in 0:1 ) {
f[x] = sin(2x)-x
}
f
rm(list = ls(all = TRUE))
f = 0
for(x in 0:1){
f[x] = sin(2x) - x
}
f
rm(list = ls(all = TRUE))
f = 0
for(x in 0:2){
f[x] = sin(2x) - x
}
f
rm(list = ls(all = TRUE))
f = 0
for(x in 0:2){
f[x] = sin(2x) - x
}
f
rm(list = ls(all = TRUE))
f = 0
for (x in seq(0, 1, 0.1) ) {
f[x] = sin(2*x)-x
}
f
rm(list = ls(all = TRUE))
f = 0
for (x in seq(0, 1, 0.01) ) {
f[x] = sin(2*x)-x
}
f
rm(list = ls(all = TRUE))
x = seq(0, 1, 0.01) )
y = sin(2*x)-x
{
plot(x,y)
abline(v=pi/6)
}
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01) )
y = sin(2*x)-x
{
plot(x,y)
abline(v=pi/6)
}
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(v=pi/6)
}
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(pi/6)
}
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(v=pi/6)
}
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(h=pi/6)
}
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(v=pi/6)
}
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(h=0)
}
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(h=0)
}
which(abs(y[-1]<0.1))
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(h=0)
}
which(abs(y[-1]) < 0.1))
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(h=0)
}
which(abs(y[-1]) < 10^-1))
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(h=0)
}
which(abs(y[-1]) < 10^-1)
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(h=0)
}
which(abs(y[-1]) < 10^-1)
rm(list = ls(all = TRUE))
x = 0
x = seq(0, 1, 0.01)
y = sin(2*x)-x
{
plot(x,y)
abline(h=0)
}
which(abs(y[-1]) < 10^-1)
x[which(abs(y[-1]) < 10^-1)]
n = 0
n ++
rm(list = ls(all = TRUE))
n = 0
n += 1
n = 0
n = 1
rm(list = ls(all = TRUE))
a = 0.9
b = 1
n = 1
crit = TRUE
pt = (a+b)/2
f1 = function(x){
sin(2*x)-x
}
while (crit == TRUE) {
if (f1 (a) * f1(pt) < 0 ){
b = pt
}
if (f1 (b) * f1 (pt) < 0){
a = pt
}
pt = (a+b)/2
n = n + 1
if(abs(b-a)< 10^(-10){
crit =FALSE
}
}
rm(list = ls(all = TRUE))
a = 0.9
b = 1
n = 1
crit = TRUE
pt = (a+b)/2
f1 = function(x){
sin(2*x)-x
}
while (crit == TRUE) {
if (f1 (a) * f1(pt) < 0 ){
b = pt
}
if (f1 (b) * f1 (pt) < 0){
a = pt
}
pt = (a+b)/2
n = n + 1
if(abs(b-a)< 10^(-10){
crit =FALSE
}
}
rm(list = ls(all = TRUE))
a = 0.9
b = 1
n = 1
crit = TRUE
pt = (a+b)/2
f1 = function(x){
sin(2*x)-x
}
while (crit == TRUE) {
if (f1 (a) * f1(pt) < 0 ){
b = pt
}
if (f1 (b) * f1 (pt) < 0){
a = pt
}
pt = (a+b)/2
n = n + 1
if(abs(b-a) < 10^(-10)){
crit =FALSE
}
}
rm(list = ls(all = TRUE))
a = 0.9
b = 1
n = 1
crit = TRUE
pt = (a+b)/2
f1 = function(x){
sin(2*x)-x
}
while (crit == TRUE) {
if (f1 (a) * f1(pt) < 0 ){
b = pt
}
if (f1 (b) * f1 (pt) < 0){
a = pt
}
pt = (a+b)/2
n = n + 1
if(abs(b-a) < 10^(-10)){
crit =FALSE
}
}
n
rm(list = ls(all = TRUE))
a = 0.5
b = 1.5
n = 1
crit = TRUE
pt = (a+b)/2
f1 = function(x){
sin(2*x)-x
}
while (crit == TRUE) {
if (f1 (a) * f1(pt) < 0 ){
b = pt
}
if (f1 (b) * f1 (pt) < 0){
a = pt
}
pt = (a+b)/2
n = n + 1
if(abs(b-a) < 10^(-10)){
crit =FALSE
}
}
n
#partie2
