n=3;
v=1:n;
M=matrix(0,n,n)
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
h
f <- function(n){
v=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
return(M)
}
f(4)
n=40
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
vn=2:n
plot(vn,detM,pch='*')
logM=lm(log(detM)~log(vn))
summary(logM)
plot(log(vn),log(detM),pch='+')
abline(logM)
n=3;
v=1:n;
M=matrix(0,n,n)
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
h
f <- function(n){
v=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
return(M)
}
f(4)
n=40
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
vn=2:n
plot(vn,detM,pch='*')
logM=lm(log(detM)~log(vn))
summary(logM)
plot(log(vn),log(detM),pch='+')
abline(logM)
n=3;
v=1:n;
M=matrix(0,n,n)
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
h
f <- function(n){
v=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
return(M)
}
f(4)
n=40
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
vn=2:n
plot(vn,detM,pch='*');
logM=lm(log(detM)~log(vn));
summary(logM)
plot(log(vn),log(detM),pch='+')
abline(logM)
n=3;
v=1:n;
M=matrix(0,n,n)
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
h
f <- function(n){
v=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
return(M)
}
f(4)
n=20
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
vn=2:n
plot(vn,detM,pch='*');
logM=lm(log(detM)~log(vn));
summary(logM)
plot(log(vn),log(detM),pch='+')
abline(logM)
n=3;
v=1:n;
M=matrix(0,n,n)
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
h
f <- function(n){
v=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
return(M)
}
f(4)
n=30
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
vn=2:n
plot(vn,detM,pch='*');
logM=lm(log(detM)~log(vn));
summary(logM)
plot(log(vn),log(detM),pch='+')
abline(logM)
n=3;
v=1:n;
M=matrix(0,n,n)
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
h
f <- function(n){
v=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
return(M)
}
f(4)
n=40
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
vn=2:n
plot(vn,detM,pch='*');
logM=lm(log(detM)~log(vn));
summary(logM)
plot(log(vn),log(detM),pch='+')
abline(logM)
n=3;
v=1:n;
M=matrix(0,n,n)
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
h
f <- function(n){
v=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
return(M)
}
f(4)
n=30
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
vn=2:n
plot(vn,detM,pch='*');
logM=lm(log(detM)~log(vn));
summary(logM)
plot(log(vn),log(detM),pch='+')
abline(logM)
n=3;
v=1:n;
M=matrix(0,n,n)
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
h
f <- function(n){
v=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(v[i]+v[j]-1)^-1
return(M)
}
f(4)
n=20
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
vn=2:n
plot(vn,detM,pch='*');
logM=lm(log(detM)~log(vn));
summary(logM)
plot(log(vn),log(detM),pch='+')
abline(logM)
I=numeric()
I[1]=log(10/9)
for(n in 1:20) I[n+1]=10*I[n]-1/n
I
plot(1:16,I[1:16],pch='*')
lines(1:16,1/(9*(1:16)),col='blue')
lines(1:16,1/(10*(1:16)),col='red')
plot(1:16,log(I[1:16]),pch='*')
J=numeric()
J[1]=log(10/9)+1e-15
for(n in 1:20) J[n+1]=10*J[n]-1/n
ecart=abs(I-J); summary(ecart)
plot(1:16,ecart[1:16],pch='*')
.Machine$double.eps
I=numeric()
I[1]=log(10/9)
for(n in 1:20) I[n+1]=10*I[n]-1/n
I
I=numeric()
I[1]=log(10/9)
for(n in 1:20){
I[n+1]=10*I[n]-1/n
}
I
I=numeric()
I[1]=log(10/9)
for(n in 1:20){
I[n+1]=10*I[n]-1/n
}
I
plot(1:16,I[1:16])
lines(1:16,1/(9*(1:16)))
lines(1:16,1/(10*(1:16)))
plot(1:16,log(I[1:16]))
J=numeric()
J[1]=log(10/9)+1e-15
for(n in 1:20) {
J[n+1]=10*J[n]-1/n
}
ecart=abs(I-J);
summary(ecart)
plot(1:16,ecart[1:16],pch='*')
I=numeric()
I[1]=log(10/9)
for(n in 1:20){
I[n+1]=10*I[n]-1/n
}
I
1e-15
rm(list = ls(all = TRUE))
I=numeric()
I[1]=log(10/9)
for(n in 1:20){
I[n+1]=10*I[n]-1/n
}
I
plot(1:16,I[1:16])
lines(1:16,1/(9*(1:16)))
lines(1:16,1/(10*(1:16)))
plot(1:16,log(I[1:16]))
J=numeric()
J[1]=log(10/9)+1e-15
for(n in 1:20) {
J[n+1]=10*J[n]-1/n
}
ecart=abs(I-J);
summary(ecart)
plot(1:16,ecart[1:16],pch='*')
.Machine$double.eps
#prouve que In
rm(list = ls(all = TRUE))
n=3;
a=1:n;
M=matrix(0,n,n)
for(i in 1:n){
for(j in 1:n){
M[i,j]=(a[i]+a[j]-1)^-1
}
}
M
f <- function(n){
v=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(a[i]+a[j]-1)^-1
return(M)
}
f(8)
n=20
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
an=2:n
plot(an,detM,pch='*');
logM=lm(log(detM)~log(an));
summary(logM)
plot(log(vn),log(detM))
abline(logM)
rm(list = ls(all = TRUE))
n=3;
a=1:n;
M=matrix(0,n,n)
for(i in 1:n){
for(j in 1:n){
M[i,j]=(a[i]+a[j]-1)^-1
}
}
M
f <- function(n){
v=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(a[i]+a[j]-1)^-1
return(M)
}
f(8)
n=20
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
an=2:n
plot(an,detM,pch='*');
logM=lm(log(detM)~log(an));
summary(logM)
plot(log(an),log(detM))
abline(logM)
a=1:n;
rm(list = ls(all = TRUE))
n=3;
a=1:n;
M=matrix(0,n,n)
for(i in 1:n){
for(j in 1:n){
M[i,j]=(a[i]+a[j]-1)^-1
}
}
M
f <- function(n){
a=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(a[i]+a[j]-1)^-1
return(M)
}
f(8)
n=20
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
an=2:n
plot(an,detM,pch='*');
logM=lm(log(detM)~log(an));
summary(logM)
plot(log(an),log(detM))
abline(logM)
rm(list = ls(all = TRUE))
n = 10
A = matrix(0,n,n)
for(i in 1:n){
for(j in 1:n){
if(i == j){
A[i,j]=1
}
else if (i == j+1){
A[i,j]=1
}
else
A[i,j]=0
}
}
norm(A)
kappa(A); 3*(2^n-1)
rcond(A); 3*(2^n-1)
rm(list = ls(all = TRUE))
n=3;
a=1:n;
M=matrix(0,n,n)
for(i in 1:n){
for(j in 1:n){
M[i,j]=(a[i]+a[j]-1)^-1
}
}
M
f <- function(n){
a=1:n;
M=matrix(0,n,n);
for(i in 1:n) for(j in 1:n) M[i,j]=(a[i]+a[j]-1)^-1
return(M)
}
f(8)
n=10
detM=sapply(2:n, function(i) det(f(i)));
summary(detM)
an=2:n
plot(an,detM,pch='*');
logM=lm(log(detM)~log(an));
summary(logM)
plot(log(an),log(detM))
abline(logM)
